/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule afDetailsQuery.graphql
 * @generated SignedSource<<224413daa69aea7c97033ccfdcaa09d4>>
 * @relayHash eb147a0720d699381139826c81661bda
 * @flow
 * @nogrep
 */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';

*/

/* eslint-disable comma-dangle, quotes */

/*
query afDetailsQuery(
  $selectedKeyId: ID!
) {
  node(id: $selectedKeyId) {
    __typename
    ... on Key {
      firstUsed
      unusedSince
      description
      sources
    }
    id
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  fragment: {
    argumentDefinitions: [
      {
        kind: 'LocalArgument',
        name: 'selectedKeyId',
        type: 'ID!',
        defaultValue: null,
      },
    ],
    kind: 'Fragment',
    metadata: null,
    name: 'afDetailsQuery',
    selections: [
      {
        kind: 'LinkedField',
        alias: null,
        args: [
          {
            kind: 'Variable',
            name: 'id',
            variableName: 'selectedKeyId',
            type: 'ID!',
          },
        ],
        concreteType: null,
        name: 'node',
        plural: false,
        selections: [
          {
            kind: 'InlineFragment',
            type: 'Key',
            selections: [
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'firstUsed',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'unusedSince',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'description',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'sources',
                storageKey: null,
              },
            ],
          },
        ],
        storageKey: null,
      },
    ],
    type: 'Query',
  },
  id: null,
  kind: 'Batch',
  metadata: {},
  name: 'afDetailsQuery',
  query: {
    argumentDefinitions: [
      {
        kind: 'LocalArgument',
        name: 'selectedKeyId',
        type: 'ID!',
        defaultValue: null,
      },
    ],
    kind: 'Root',
    name: 'afDetailsQuery',
    operation: 'query',
    selections: [
      {
        kind: 'LinkedField',
        alias: null,
        args: [
          {
            kind: 'Variable',
            name: 'id',
            variableName: 'selectedKeyId',
            type: 'ID!',
          },
        ],
        concreteType: null,
        name: 'node',
        plural: false,
        selections: [
          {
            kind: 'ScalarField',
            alias: null,
            args: null,
            name: '__typename',
            storageKey: null,
          },
          {
            kind: 'ScalarField',
            alias: null,
            args: null,
            name: 'id',
            storageKey: null,
          },
          {
            kind: 'InlineFragment',
            type: 'Key',
            selections: [
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'firstUsed',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'unusedSince',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'description',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'sources',
                storageKey: null,
              },
            ],
          },
        ],
        storageKey: null,
      },
    ],
  },
  text:
    'query afDetailsQuery(\n  $selectedKeyId: ID!\n) {\n  node(id: $selectedKeyId) {\n    __typename\n    ... on Key {\n      firstUsed\n      unusedSince\n      description\n      sources\n    }\n    id\n  }\n}\n',
};

module.exports = batch;
