// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Source parser Custom regexp parsing should work with custom regexps 1`] = `
Object {
  "!!": Object {
    "context": null,
    "firstUsed": null,
    "id": "!!",
    "sources": Array [
      "FILENAME",
    ],
    "text": "!!",
    "unusedSince": null,
  },
  "hey": Object {
    "context": null,
    "firstUsed": null,
    "id": "hey",
    "sources": Array [
      "FILENAME",
    ],
    "text": "hey",
    "unusedSince": null,
  },
  "ho": Object {
    "context": null,
    "firstUsed": null,
    "id": "ho",
    "sources": Array [
      "FILENAME",
    ],
    "text": "ho",
    "unusedSince": null,
  },
  "let's go": Object {
    "context": null,
    "firstUsed": null,
    "id": "let's go",
    "sources": Array [
      "FILENAME",
    ],
    "text": "let's go",
    "unusedSince": null,
  },
}
`;

exports[`Source parser Custom regexp parsing should work with custom regexps and multiline strings 1`] = `
Object {
  "A very
long
string": Object {
    "context": null,
    "firstUsed": null,
    "id": "A very
long
string",
    "sources": Array [
      "FILENAME",
    ],
    "text": "A very
long
string",
    "unusedSince": null,
  },
}
`;

exports[`Source parser Function parser should extract context if available 1`] = `
Object {
  "context_Example": Object {
    "context": "context",
    "firstUsed": null,
    "id": "context_Example",
    "sources": Array [
      "FILENAME",
    ],
    "text": "Example",
    "unusedSince": null,
  },
}
`;

exports[`Source parser Function parser should work in a simple case 1`] = `
Object {
  "Example": Object {
    "context": null,
    "firstUsed": null,
    "id": "Example",
    "sources": Array [
      "FILENAME",
    ],
    "text": "Example",
    "unusedSince": null,
  },
}
`;

exports[`Source parser Function parser should work with multiline strings 1`] = `
Object {
  "context_This is a very
long
string": Object {
    "context": "context",
    "firstUsed": null,
    "id": "context_This is a very
long
string",
    "sources": Array [
      "FILENAME",
    ],
    "text": "This is a very
long
string",
    "unusedSince": null,
  },
}
`;

exports[`Source parser Function parser should work with single and double quotes 1`] = `
Object {
  "Example": Object {
    "context": null,
    "firstUsed": null,
    "id": "Example",
    "sources": Array [
      "FILENAME",
    ],
    "text": "Example",
    "unusedSince": null,
  },
  "Example2": Object {
    "context": null,
    "firstUsed": null,
    "id": "Example2",
    "sources": Array [
      "FILENAME",
    ],
    "text": "Example2",
    "unusedSince": null,
  },
}
`;

exports[`Source parser Function parser should work with specially-named functions 1`] = `
Object {
  "hi": Object {
    "context": null,
    "firstUsed": null,
    "id": "hi",
    "sources": Array [
      "FILENAME",
    ],
    "text": "hi",
    "unusedSince": null,
  },
  "ho": Object {
    "context": null,
    "firstUsed": null,
    "id": "ho",
    "sources": Array [
      "FILENAME",
    ],
    "text": "ho",
    "unusedSince": null,
  },
  "there": Object {
    "context": null,
    "firstUsed": null,
    "id": "there",
    "sources": Array [
      "FILENAME",
    ],
    "text": "there",
    "unusedSince": null,
  },
}
`;

exports[`Source parser React Intl parser should extract messages from FormattedHTMLMessage components 1`] = `
Object {
  "context_<i>Hello {NAME}!</i>": Object {
    "context": "context",
    "description": undefined,
    "firstUsed": null,
    "id": "context_<i>Hello {NAME}!</i>",
    "reactIntlId": "reactIntlId2",
    "sources": Array [
      "FILENAME",
    ],
    "text": "<i>Hello {NAME}!</i>",
    "unusedSince": null,
  },
}
`;

exports[`Source parser React Intl parser should extract messages from FormattedMessage components 1`] = `
Object {
  "context_Hello {NAME}!": Object {
    "context": "context",
    "description": "Bla bla bla",
    "firstUsed": null,
    "id": "context_Hello {NAME}!",
    "reactIntlId": "reactIntlId1",
    "sources": Array [
      "FILENAME",
    ],
    "text": "Hello {NAME}!",
    "unusedSince": null,
  },
}
`;

exports[`Source parser React Intl parser should extract messages from defineMessages() calls 1`] = `
Object {
  "someContext_Hello, {NAME}!": Object {
    "context": "someContext",
    "description": "Message to greet the user",
    "firstUsed": null,
    "id": "someContext_Hello, {NAME}!",
    "reactIntlId": "reactIntlId3",
    "sources": Array [
      "FILENAME",
    ],
    "text": "Hello, {NAME}!",
    "unusedSince": null,
  },
}
`;
